# Group Domains Admin
Admin Endpoints for dealing with domains, end points under `/admin` require the `manage_domains` permission.

As a general rule, anything that exists under `/domains` also exists under `/admin/domains` but in a less-restricted fashion. (ie, behaves as if the user had `owner` access to all domains and allows setting the domain owner access level on a domain).

As such, to prevent documentation duplication, this section only lists methods where the result is different.

## Get domains [/admin/domains]

### Get list of all known domains  [GET]
See what domains exist and user access levels for each.
+ Response 200 (application/json)
    + Body

            {
                "respid": "58bdf3b15c33b",
                "method": "admin/domains",
                "response":{
                    "example.org":{
                        "disabled": "false",
                        "users":{
                            "admin@example.org": "owner"
                        }
                    },
                    "test2.com":{
                        "disabled": "false",
                        "users":{
                            "admin@example.org": "owner"
                        }
                    },
                    "test3.com":{
                        "disabled": "false",
                        "users":{
                            "admin@example.org": "owner"
                        }
                    },
                    "test4.com":{
                        "disabled": "false",
                        "users":{
                            "admin@example.org": "owner"
                        }
                    },
                    "test5.com":{
                        "disabled": "false",
                        "users":{
                            "admin@example.org": "owner"
                        }
                    },
                    "example1.org":{
                        "disabled": "false",
                        "users":{
                            "user1@example.org": "owner"
                        }
                    },
                    "example2.org":{
                    "disabled": "false",
                        "users":{
                            "admin@example.org": "write",
                            "user2@example.org": "owner"
                        }
                    },
                    "example3.org":{
                        "disabled": "false",
                        "users":{
                            "user3@example.org": "owner"
                        }
                    },
                    "example4.org":{
                        "disabled": "false",
                        "users":{
                            "admin@example.org": "write",
                            "user4@example.org": "owner"
                        }
                    },
                    "example5.org":{
                        "disabled": "false",
                        "users":{
                            "user5@example.org": "owner"
                        }
                    },
                    "unowned1.com":{
                        "disabled": "false",
                        "users":{
                            "admin@example.org": "owner"
                        }
                    },
                    "unowned2.com":{
                        "disabled": "false",
                        "users":{
                            "admin@example.org": "read"
                        }
                    },
                    "unowned3.com":{
                        "disabled": "false",
                        "users":{
                            null
                        }
                    },
                    "unowned4.com":{
                        "disabled": "false",
                        "users":{
                            "admin@example.org": "read"
                        }
                    },
                    "unowned5.com":{
                        "disabled": "false",
                        "users":{
                            null
                        }
                    }
                }
            }

### Create a new domain [POST]
This behaves the same as the non-admin end-point, and requires the `domains_create` permission in addition to the `manage_domains` permission.

The admin version of the endpoint however also allows specifying an owner of a newly created domain.

If owner is not specified, then the current user will be set as the owner (same as non-admin end-point)

If owner is blank, no owner will be set.

+ Request Create a domain (application/json)
    + Body

            {
                "data": {
                    "domain": "example.net",
                    "owner": "someone@example.net"
                }
            }


+ Response 200 (application/json)
    A successful response will display the newly-created domain.
    + Body

            {
                "respid": "58bcc0c377913",
                "method": "domains",
                "response":{
                    "id": "9",
                    "domain": "example.net",
                    "disabled": false,
                    "SOA":{
                        "primaryNS": "ns1.example.net.",
                        "adminAddress": "dnsadmin.example.net.",
                        "serial": "0",
                        "refresh": "86400",
                        "retry": "7200",
                        "expire": "2419200",
                        "minttl": "60"
                    }
                }
            }

+ Response 400 (application/json)
    An error will include an `error` and possibly `errorData` information.
    + Body

            {
                "respid": "58bcc115b3601",
                "method": "domains",
                "error": "Error updating domain.",
                "errorData": "Duplicate entry 'example.net' for key 'domain_domain_unique'"
            }


